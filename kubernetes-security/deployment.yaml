apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: homework
  labels:
    app: nginx
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
        maxSurge: 2
        maxUnavailable: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      serviceAccountName: monitoring
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: homework
                operator: In
                values:
                - "true"
      volumes:
      - name: html
        persistentVolumeClaim: 
          claimName: pvc-nginx
      - name: config-volume
        configMap:
          name: nginx-config
      - name: data-volume
        configMap:
          name: nginx-data
      containers:
      - name: nginx
        image: nginx:1.27.3
        volumeMounts:
        - mountPath: /homework
          name: html
        - mountPath: /etc/nginx/conf.d
          name: config-volume
        - mountPath: /homework/conf
          name: data-volume
        lifecycle:
          preStop:
            exec:
              command: ["/bin/sh", "-c", "rm -f /homework/index.html"]
        ports:
          - containerPort: 8000
        readinessProbe:
          httpGet:
            path: /index.html
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 5
      initContainers:
        - name: init-alpine-curl:8.10.0
          image: alpine/curl
          command: ['sh', '-c', 'curl -L -o /init/index.html https://google.com && curl -k -H "Authorization: Bearer $(cat /var/run/secrets/kubernetes.io/serviceaccount/token)" https://172.23.60.219:10250/metrics -o /init/metrics.html']
          volumeMounts:
          - mountPath: /init
            name: html